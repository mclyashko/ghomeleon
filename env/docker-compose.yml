version: "3.9"

services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.47.0
    volumes:
      - ./prometheus/prom_config:/etc/prometheus
      - ./prometheus/prom_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: "no"
    healthcheck:
      test: [ "CMD", "wget", "-O/dev/null", "http://localhost:9090" ]
      interval: 10s
      timeout: 30s
      retries: 5
  grafana:
    container_name: grafana
    image: grafana/grafana:10.1.2
    volumes:
      - ./grafana/gf_data:/var/lib/grafana
      - ./grafana/gf_config:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    restart: "no"
    healthcheck:
      test: [ "CMD", "wget", "-O/dev/null", "http://localhost:3000/api/health" ]
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      prometheus:
        condition: service_healthy
  postgres:
    container_name: postgres
    image: postgres:16
    volumes:
      - ./postgres/pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: "no"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      grafana:
        condition: service_healthy
  ghomeleon:
    container_name: ghomeleon
    build:
      context: ../
      dockerfile: ./env/ghomeleon/DockerfileGhomeleon
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8080:8080"
    restart: "no"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1" ]
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy